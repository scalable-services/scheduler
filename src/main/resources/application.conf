akka {

  loglevel = INFO
  use-slf4j = on

  log-dead-letters-during-shutdown = off

  actor {
    provider = "cluster"
    allow-java-serialization = off

    serializers {
          jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
          jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
          proto = "akka.remote.serialization.ProtobufSerializer"
        }

        serialization-bindings {
          "services.scalable.scheduler.CborSerializable" = jackson-cbor
          "com.google.protobuf.Message" = proto
        }
  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka://Scheduler@127.0.0.1:2551",
      "akka://Scheduler@127.0.0.1:2552"]

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  http.server.preview.enable-http2 = on

  cluster.sharding {
    # Number of shards used by the default HashCodeMessageExtractor
    # when no other message extractor is defined. This value must be
    # the same for all nodes in the cluster and that is verified by
    # configuration check when joining. Changing the value requires
    # stopping all nodes in the cluster.
    number-of-shards = 100
    remember-entities = off
  }
}