syntax = "proto3";

package services.scalable.scheduler.protocol;

//import "scalapb/scalapb.proto";

//#options
option java_multiple_files = true;
option java_package = "services.scalable.scheduler.protocol";
option java_outer_classname = "CoordinatorService";

/*option (scalapb.options) = {
  single_file: true
  flat_package: true
  preamble: "sealed trait ActorCommand"
};

message Stop {
  option (scalapb.message).extends = "ActorCommand";
}*/

message TaskResponse {
  string id = 1;
  bool succeed = 2;
  int64 elapsed = 3;
}

message Command {
  string id = 1;
  map<string, string> reads = 2;
  map<string, int32> writes = 3;

  string batchId = 4;

  repeated int32 schedulers = 5;
}

message Batch {
  string id = 1;
  repeated Command tasks = 2;
}

message MetaBatch {
  string id = 1;
  string topic = 2;
  string topicHandler = 3;
  int32 coordinator = 4;

  repeated int32 schedulers = 5;
  int32 scheduler = 6;
  repeated int32 partitions = 7;

  repeated Command commands = 8;
}

message Epoch {
  string id = 1;
  repeated MetaBatch metas = 2;

  repeated int32 schedulers = 3;
  int32 scheduler = 4;
}

message Task {
  string id = 1;
  int32 scheduler = 2;

  MetaBatch meta = 3;
}

message BatchDone {
  string id = 1;
  int32 coordinator = 2;

  repeated string succeed = 3;
  repeated string failed = 4;

  int32 scheduler = 5;
}

message AckBatchDone {
  string id = 1;
  int32 scheduler = 2;
}

message PartitionDone {
  string id = 1;
  int32 scheduler = 2;
}

message PartitionMeta {
  string id = 1;
  string topic = 2;
  string topicHandler = 3;
  int32 partition = 4;
  int64 offset = 5;
  int64 last = 6;

  repeated int32 schedulers = 7;
  int32 scheduler = 8;
}

message VotesBatch {
  repeated string metas = 1;
  int32 from = 2;
}

message Conflicts {
  string pm = 1;
  int32 scheduler = 2;
  repeated Command succeed = 3;
  repeated Command failed = 4;
}

